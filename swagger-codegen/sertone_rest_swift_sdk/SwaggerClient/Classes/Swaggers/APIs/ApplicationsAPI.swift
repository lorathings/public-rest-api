//
// ApplicationsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class ApplicationsAPI: APIBase {
    /**
     getApplicationsByUserId() - Gets all applications owned by given user.
     
     - parameter userId: (path) The userId whom to get owned applications 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getApplicationsByUserId(userId userId: String, completion: ((data: [Applications]?, error: ErrorType?) -> Void)) {
        getApplicationsByUserIdWithRequestBuilder(userId: userId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     getApplicationsByUserId() - Gets all applications owned by given user.
     - GET /users/{userId}/applications
     - 
     - API Key:
       - type: apiKey Authorization 
       - name: server_token
     - API Key:
       - type: apiKey ClientID 
       - name: client_id
     - examples: [{contentType=application/xml, example=<Application>
  <id>123456</id>
  <appEui>string</appEui>
  <name>string</name>
  <owner>string</owner>
  <accessKeys>string</accessKeys>
  <valid>true</valid>
</Application>}, {contentType=application/json, example=[ {
  "owner" : "aeiou",
  "valid" : true,
  "accessKeys" : "aeiou",
  "name" : "aeiou",
  "id" : 123456789,
  "appEui" : "aeiou"
} ]}]
     - examples: [{contentType=application/xml, example=<Application>
  <id>123456</id>
  <appEui>string</appEui>
  <name>string</name>
  <owner>string</owner>
  <accessKeys>string</accessKeys>
  <valid>true</valid>
</Application>}, {contentType=application/json, example=[ {
  "owner" : "aeiou",
  "valid" : true,
  "accessKeys" : "aeiou",
  "name" : "aeiou",
  "id" : 123456789,
  "appEui" : "aeiou"
} ]}]
     
     - parameter userId: (path) The userId whom to get owned applications 

     - returns: RequestBuilder<[Applications]> 
     */
    public class func getApplicationsByUserIdWithRequestBuilder(userId userId: String) -> RequestBuilder<[Applications]> {
        var path = "/users/{userId}/applications"
        path = path.stringByReplacingOccurrencesOfString("{userId}", withString: "\(userId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[Applications]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     getApplicationsByUserIdAndAppId() - Gets details of given application ID for this given user.
     
     - parameter userId: (path) The userId where application will be retrieved 
     - parameter appEui: (path) The applicationId to be retrieved 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getApplicationsByUserIdAndAppId(userId userId: String, appEui: String, completion: ((data: Applications?, error: ErrorType?) -> Void)) {
        getApplicationsByUserIdAndAppIdWithRequestBuilder(userId: userId, appEui: appEui).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     getApplicationsByUserIdAndAppId() - Gets details of given application ID for this given user.
     - GET /users/{userId}/applications/{appEui}
     - 
     - API Key:
       - type: apiKey Authorization 
       - name: server_token
     - API Key:
       - type: apiKey ClientID 
       - name: client_id
     - examples: [{contentType=application/xml, example=<Application>
  <id>123456</id>
  <appEui>string</appEui>
  <name>string</name>
  <owner>string</owner>
  <accessKeys>string</accessKeys>
  <valid>true</valid>
</Application>}, {contentType=application/json, example={
  "owner" : "aeiou",
  "valid" : true,
  "accessKeys" : "aeiou",
  "name" : "aeiou",
  "id" : 123456789,
  "appEui" : "aeiou"
}}]
     - examples: [{contentType=application/xml, example=<Application>
  <id>123456</id>
  <appEui>string</appEui>
  <name>string</name>
  <owner>string</owner>
  <accessKeys>string</accessKeys>
  <valid>true</valid>
</Application>}, {contentType=application/json, example={
  "owner" : "aeiou",
  "valid" : true,
  "accessKeys" : "aeiou",
  "name" : "aeiou",
  "id" : 123456789,
  "appEui" : "aeiou"
}}]
     
     - parameter userId: (path) The userId where application will be retrieved 
     - parameter appEui: (path) The applicationId to be retrieved 

     - returns: RequestBuilder<Applications> 
     */
    public class func getApplicationsByUserIdAndAppIdWithRequestBuilder(userId userId: String, appEui: String) -> RequestBuilder<Applications> {
        var path = "/users/{userId}/applications/{appEui}"
        path = path.stringByReplacingOccurrencesOfString("{userId}", withString: "\(userId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{appEui}", withString: "\(appEui)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Applications>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
