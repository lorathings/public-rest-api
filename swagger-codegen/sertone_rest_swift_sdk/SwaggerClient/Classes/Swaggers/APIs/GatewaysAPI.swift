//
// GatewaysAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class GatewaysAPI: APIBase {
    /**
     getGatewayStatus() - Gets current status of gateway.
     
     - parameter gwEui: (path) The gatewayId to be retrieved 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getGatewayStatus(gwEui gwEui: String, completion: ((data: GatewaysStatus?, error: ErrorType?) -> Void)) {
        getGatewayStatusWithRequestBuilder(gwEui: gwEui).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     getGatewayStatus() - Gets current status of gateway.
     - GET /gateways/{gwEui}/status
     - 
     - API Key:
       - type: apiKey Authorization 
       - name: server_token
     - API Key:
       - type: apiKey ClientID 
       - name: client_id
     - examples: [{contentType=application/xml, example=<GatewayStatus>
  <gateway_eui>string</gateway_eui>
  <gateway_activity>string</gateway_activity>
  <last_pull_data>string</last_pull_data>
  <last_push_data>string</last_push_data>
  <pull_data_count>string</pull_data_count>
  <push_data_count>string</push_data_count>
</GatewayStatus>}, {contentType=application/json, example={
  "last_push_data" : "aeiou",
  "push_data_count" : "aeiou",
  "gateway_eui" : "aeiou",
  "gateway_activity" : "aeiou",
  "pull_data_count" : "aeiou",
  "last_pull_data" : "aeiou"
}}]
     - examples: [{contentType=application/xml, example=<GatewayStatus>
  <gateway_eui>string</gateway_eui>
  <gateway_activity>string</gateway_activity>
  <last_pull_data>string</last_pull_data>
  <last_push_data>string</last_push_data>
  <pull_data_count>string</pull_data_count>
  <push_data_count>string</push_data_count>
</GatewayStatus>}, {contentType=application/json, example={
  "last_push_data" : "aeiou",
  "push_data_count" : "aeiou",
  "gateway_eui" : "aeiou",
  "gateway_activity" : "aeiou",
  "pull_data_count" : "aeiou",
  "last_pull_data" : "aeiou"
}}]
     
     - parameter gwEui: (path) The gatewayId to be retrieved 

     - returns: RequestBuilder<GatewaysStatus> 
     */
    public class func getGatewayStatusWithRequestBuilder(gwEui gwEui: String) -> RequestBuilder<GatewaysStatus> {
        var path = "/gateways/{gwEui}/status"
        path = path.stringByReplacingOccurrencesOfString("{gwEui}", withString: "\(gwEui)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<GatewaysStatus>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     getGatewaysByUserId() - Gets all gateways owned by given user.
     
     - parameter userId: (path) The userId whom to get owned gateways 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getGatewaysByUserId(userId userId: String, completion: ((data: [Gateways]?, error: ErrorType?) -> Void)) {
        getGatewaysByUserIdWithRequestBuilder(userId: userId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     getGatewaysByUserId() - Gets all gateways owned by given user.
     - GET /users/{userId}/gateways
     - 
     - API Key:
       - type: apiKey Authorization 
       - name: server_token
     - API Key:
       - type: apiKey ClientID 
       - name: client_id
     - examples: [{contentType=application/xml, example=<Gateway>
  <id>123456</id>
  <owner>string</owner>
  <gateway_eui>string</gateway_eui>
  <gateway_status>string</gateway_status>
  <longitude>string</longitude>
  <latitude>string</latitude>
  <altitude>string</altitude>
  <address>string</address>
  <base_model>string</base_model>
  <city>string</city>
  <concentrator>string</concentrator>
  <country>string</country>
  <freq_plan>string</freq_plan>
  <region>string</region>
  <rel_customer_uid>string</rel_customer_uid>
  <gateway_title>string</gateway_title>
  <zip_code>string</zip_code>
  <created_on>string</created_on>
</Gateway>}, {contentType=application/json, example=[ {
  "owner" : "aeiou",
  "altitude" : "aeiou",
  "country" : "aeiou",
  "address" : "aeiou",
  "base_model" : "aeiou",
  "city" : "aeiou",
  "latitude" : "aeiou",
  "gateway_eui" : "aeiou",
  "zip_code" : "aeiou",
  "rel_customer_uid" : "aeiou",
  "concentrator" : "aeiou",
  "freq_plan" : "aeiou",
  "gateway_status" : "aeiou",
  "created_on" : "aeiou",
  "id" : 123456789,
  "gateway_title" : "aeiou",
  "region" : "aeiou",
  "longitude" : "aeiou"
} ]}]
     - examples: [{contentType=application/xml, example=<Gateway>
  <id>123456</id>
  <owner>string</owner>
  <gateway_eui>string</gateway_eui>
  <gateway_status>string</gateway_status>
  <longitude>string</longitude>
  <latitude>string</latitude>
  <altitude>string</altitude>
  <address>string</address>
  <base_model>string</base_model>
  <city>string</city>
  <concentrator>string</concentrator>
  <country>string</country>
  <freq_plan>string</freq_plan>
  <region>string</region>
  <rel_customer_uid>string</rel_customer_uid>
  <gateway_title>string</gateway_title>
  <zip_code>string</zip_code>
  <created_on>string</created_on>
</Gateway>}, {contentType=application/json, example=[ {
  "owner" : "aeiou",
  "altitude" : "aeiou",
  "country" : "aeiou",
  "address" : "aeiou",
  "base_model" : "aeiou",
  "city" : "aeiou",
  "latitude" : "aeiou",
  "gateway_eui" : "aeiou",
  "zip_code" : "aeiou",
  "rel_customer_uid" : "aeiou",
  "concentrator" : "aeiou",
  "freq_plan" : "aeiou",
  "gateway_status" : "aeiou",
  "created_on" : "aeiou",
  "id" : 123456789,
  "gateway_title" : "aeiou",
  "region" : "aeiou",
  "longitude" : "aeiou"
} ]}]
     
     - parameter userId: (path) The userId whom to get owned gateways 

     - returns: RequestBuilder<[Gateways]> 
     */
    public class func getGatewaysByUserIdWithRequestBuilder(userId userId: String) -> RequestBuilder<[Gateways]> {
        var path = "/users/{userId}/gateways"
        path = path.stringByReplacingOccurrencesOfString("{userId}", withString: "\(userId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[Gateways]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
