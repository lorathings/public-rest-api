/**
 * SERTONE REST API
 * This is the SERTONE REST API server for the  Sertone IOT Developers.  You can find out more about IOT at [http://www.sertone.com](http://www.sertone.com) or about the API on [API Reference](http://dev.sertone.com/public-rest-api).
 *
 * OpenAPI spec version: 0.0.1
 * Contact: email@sertone.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SertoneRestApi);
  }
}(this, function(expect, SertoneRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SertoneRestApi.Gateways();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Gateways', function() {
    it('should create an instance of Gateways', function() {
      // uncomment below and update the code to test Gateways
      //var instane = new SertoneRestApi.Gateways();
      //expect(instance).to.be.a(SertoneRestApi.Gateways);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new SertoneRestApi.Gateways();
      //expect(instance).to.be();
    });

    it('should have the property owner (base name: "owner")', function() {
      // uncomment below and update the code to test the property owner
      //var instane = new SertoneRestApi.Gateways();
      //expect(instance).to.be();
    });

    it('should have the property gatewayEui (base name: "gateway_eui")', function() {
      // uncomment below and update the code to test the property gatewayEui
      //var instane = new SertoneRestApi.Gateways();
      //expect(instance).to.be();
    });

    it('should have the property gatewayStatus (base name: "gateway_status")', function() {
      // uncomment below and update the code to test the property gatewayStatus
      //var instane = new SertoneRestApi.Gateways();
      //expect(instance).to.be();
    });

    it('should have the property longitude (base name: "longitude")', function() {
      // uncomment below and update the code to test the property longitude
      //var instane = new SertoneRestApi.Gateways();
      //expect(instance).to.be();
    });

    it('should have the property latitude (base name: "latitude")', function() {
      // uncomment below and update the code to test the property latitude
      //var instane = new SertoneRestApi.Gateways();
      //expect(instance).to.be();
    });

    it('should have the property altitude (base name: "altitude")', function() {
      // uncomment below and update the code to test the property altitude
      //var instane = new SertoneRestApi.Gateways();
      //expect(instance).to.be();
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instane = new SertoneRestApi.Gateways();
      //expect(instance).to.be();
    });

    it('should have the property baseModel (base name: "base_model")', function() {
      // uncomment below and update the code to test the property baseModel
      //var instane = new SertoneRestApi.Gateways();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instane = new SertoneRestApi.Gateways();
      //expect(instance).to.be();
    });

    it('should have the property concentrator (base name: "concentrator")', function() {
      // uncomment below and update the code to test the property concentrator
      //var instane = new SertoneRestApi.Gateways();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "country")', function() {
      // uncomment below and update the code to test the property country
      //var instane = new SertoneRestApi.Gateways();
      //expect(instance).to.be();
    });

    it('should have the property freqPlan (base name: "freq_plan")', function() {
      // uncomment below and update the code to test the property freqPlan
      //var instane = new SertoneRestApi.Gateways();
      //expect(instance).to.be();
    });

    it('should have the property region (base name: "region")', function() {
      // uncomment below and update the code to test the property region
      //var instane = new SertoneRestApi.Gateways();
      //expect(instance).to.be();
    });

    it('should have the property relCustomerUid (base name: "rel_customer_uid")', function() {
      // uncomment below and update the code to test the property relCustomerUid
      //var instane = new SertoneRestApi.Gateways();
      //expect(instance).to.be();
    });

    it('should have the property gatewayTitle (base name: "gateway_title")', function() {
      // uncomment below and update the code to test the property gatewayTitle
      //var instane = new SertoneRestApi.Gateways();
      //expect(instance).to.be();
    });

    it('should have the property zipCode (base name: "zip_code")', function() {
      // uncomment below and update the code to test the property zipCode
      //var instane = new SertoneRestApi.Gateways();
      //expect(instance).to.be();
    });

    it('should have the property createdOn (base name: "created_on")', function() {
      // uncomment below and update the code to test the property createdOn
      //var instane = new SertoneRestApi.Gateways();
      //expect(instance).to.be();
    });

  });

}));
